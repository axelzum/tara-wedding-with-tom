{
  "extends": ["next/core-web-vitals"],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint"],
  "root": true,
  "rules": {
    "react/hook-use-state": "error",
    "react/jsx-closing-bracket-location": "error",
    "react/jsx-closing-tag-location": "error",
    "react/jsx-curly-brace-presence": ["error", "always"],
    "react/jsx-curly-newline": ["error", "consistent"],
    "react/jsx-curly-spacing": ["error", "never"],
    "react/jsx-equals-spacing": ["error", "never"],
    "react/jsx-first-prop-new-line": "error",
    "react/jsx-fragments": ["error", "syntax"],
    "react/jsx-indent": ["error", "tab", {"checkAttributes": true, "indentLogicalExpressions": true}],
    "react/jsx-indent-props": ["error", "tab"],
    "react/jsx-max-props-per-line": ["error", {"maximum": {"single": 2, "multi": 1}}],
    "react/jsx-no-literals": ["error", {"ignoreProps": false}],
    "react/jsx-no-constructed-context-values": "error",
    "react/jsx-no-useless-fragment": "error",
    "react/jsx-pascal-case": "error",
    "react/jsx-props-no-multi-spaces": "error",
    "react/jsx-sort-props": "error",
    "react/jsx-tag-spacing": "error",
    "react/no-unused-state": "error",
    "react/no-unused-prop-types": "error",
    "react/self-closing-comp": "error",
    "@typescript-eslint/array-type": ["error", {"default":  "array-simple"}],
    "@typescript-eslint/ban-types": "error",
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/method-signature-style": ["error", "method"],
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "no-constant-binary-expression": "error",
    "no-duplicate-imports": "error",
    "no-self-compare": "error",
    "no-unreachable-loop": "error",
    "no-use-before-define": "error",
    "arrow-body-style": "error",
    "complexity": ["error", 2],
    "default-case": "error",
    "default-case-last": "error",
    "eqeqeq": "error",
    "func-names": ["error", "always"],
    "max-depth": "error",
    "no-confusing-arrow": "error"
  },
  "overrides": [
    {
      "files": [
        "*.ts", "*.tsx"
      ],

      // Extend TypeScript plugins here, instead of extending them outside the `overrides`.
      // If you don't want to extend any rules, you don't need an `extends` attribute.
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
      ],

      "parserOptions": {
        "project": [
          "./tsconfig.json"
        ] // Specify it only for TypeScript files
      }
    }
  ]
}
